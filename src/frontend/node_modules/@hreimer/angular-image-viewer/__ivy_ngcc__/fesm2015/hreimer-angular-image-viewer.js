import { EventEmitter, Component, Optional, Inject, Input, Output, HostListener, Directive, ElementRef, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DomSanitizer, BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
import * as ɵngcc2 from '@angular/common';

function AngularImageViewerComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelement(1, "div", 8);
    ɵngcc0.ɵɵelementEnd();
} }
function AngularImageViewerComponent_ng_container_5_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_5_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.rotateCounterClockwise(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r9.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r9.config.btnIcons.rotateCounterClockwise.classes);
} }
function AngularImageViewerComponent_ng_container_5_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_5_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.rotateCounterClockwise(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r10.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r10.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r10.config.btnIcons.rotateCounterClockwise.text);
} }
function AngularImageViewerComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_5_button_1_Template, 2, 4, "button", 9);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_ng_container_5_a_2_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.config.btnIcons.rotateCounterClockwise.classes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.config.btnIcons.rotateCounterClockwise.text);
} }
function AngularImageViewerComponent_ng_container_6_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_6_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(2); return ctx_r17.rotateClockwise(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r15.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r15.config.btnIcons.rotateClockwise.classes);
} }
function AngularImageViewerComponent_ng_container_6_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_6_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); const ctx_r19 = ɵngcc0.ɵɵnextContext(2); return ctx_r19.rotateClockwise(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r16.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r16.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r16.config.btnIcons.rotateClockwise.text);
} }
function AngularImageViewerComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_6_button_1_Template, 2, 4, "button", 9);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_ng_container_6_a_2_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.config.btnIcons.rotateClockwise.classes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.config.btnIcons.rotateClockwise.text);
} }
function AngularImageViewerComponent_ng_container_7_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_7_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(2); return ctx_r23.zoomOut(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r21.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r21.config.btnIcons.zoomOut.classes);
} }
function AngularImageViewerComponent_ng_container_7_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_7_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.zoomOut(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r22.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r22.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r22.config.btnIcons.zoomOut.text);
} }
function AngularImageViewerComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_7_button_1_Template, 2, 4, "button", 9);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_ng_container_7_a_2_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.config.btnIcons.zoomOut.classes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.config.btnIcons.zoomOut.text);
} }
function AngularImageViewerComponent_ng_container_8_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_8_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.zoomIn(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r27.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r27.config.btnIcons.zoomIn.classes);
} }
function AngularImageViewerComponent_ng_container_8_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r32 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_8_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r31 = ɵngcc0.ɵɵnextContext(2); return ctx_r31.zoomIn(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r28 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r28.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r28.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r28.config.btnIcons.zoomIn.text);
} }
function AngularImageViewerComponent_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_8_button_1_Template, 2, 4, "button", 9);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_ng_container_8_a_2_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.config.btnIcons.zoomIn.classes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.config.btnIcons.zoomIn.text);
} }
function AngularImageViewerComponent_ng_container_9_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r36 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_9_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.toggleFullscreen(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r33 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r33.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r33.config.btnIcons.fullscreen.classes);
} }
function AngularImageViewerComponent_ng_container_9_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r38 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_9_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r38); const ctx_r37 = ɵngcc0.ɵɵnextContext(2); return ctx_r37.toggleFullscreen(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r34 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r34.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r34.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r34.config.btnIcons.fullscreen.text);
} }
function AngularImageViewerComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_9_button_1_Template, 2, 4, "button", 9);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_ng_container_9_a_2_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.config.btnIcons.fullscreen.classes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.config.btnIcons.fullscreen.text);
} }
function AngularImageViewerComponent_ng_container_10_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r42 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_10_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r42); const ctx_r41 = ɵngcc0.ɵɵnextContext(2); return ctx_r41.reset(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r39 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r39.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r39.config.btnIcons.reset.classes);
} }
function AngularImageViewerComponent_ng_container_10_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r44 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_10_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r44); const ctx_r43 = ɵngcc0.ɵɵnextContext(2); return ctx_r43.reset(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r40 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r40.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r40.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r40.config.btnIcons.reset.text);
} }
function AngularImageViewerComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_10_button_1_Template, 2, 4, "button", 9);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_ng_container_10_a_2_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.config.btnIcons.reset.classes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.config.btnIcons.reset.text);
} }
function AngularImageViewerComponent_ng_container_11_button_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span");
} if (rf & 2) {
    const cBtn_r45 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵclassMap(cBtn_r45.icon.classes);
} }
function AngularImageViewerComponent_ng_container_11_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r52 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 11);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_11_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r52); const cBtn_r45 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r50 = ɵngcc0.ɵɵnextContext(); return ctx_r50.fireCustomEvent(cBtn_r45.name, ctx_r50.index); });
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_11_button_1_span_1_Template, 1, 2, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cBtn_r45 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r46 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r46.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cBtn_r45.icon.classes);
} }
function AngularImageViewerComponent_ng_container_11_ng_container_2_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r57 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_ng_container_11_ng_container_2_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r57); const cBtn_r45 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r55 = ɵngcc0.ɵɵnextContext(); return ctx_r55.fireCustomEvent(cBtn_r45.name, ctx_r55.index); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cBtn_r45 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r54 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r54.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r54.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(cBtn_r45.icon.text);
} }
function AngularImageViewerComponent_ng_container_11_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_11_ng_container_2_a_1_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const cBtn_r45 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cBtn_r45.icon.text);
} }
function AngularImageViewerComponent_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_ng_container_11_button_1_Template, 2, 3, "button", 9);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_ng_container_11_ng_container_2_Template, 2, 1, "ng-container", 4);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const cBtn_r45 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cBtn_r45.icon.classes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", cBtn_r45.icon.text);
} }
function AngularImageViewerComponent_div_12_button_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span");
} if (rf & 2) {
    const ctx_r64 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r64.config.btnIcons.prev.classes);
} }
function AngularImageViewerComponent_div_12_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r66 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_div_12_button_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r66); const ctx_r65 = ɵngcc0.ɵɵnextContext(2); return ctx_r65.prevImage($event); });
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_div_12_button_1_span_1_Template, 1, 2, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r60 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r60.config.btnClass);
    ɵngcc0.ɵɵproperty("disabled", ctx_r60.index === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r60.config.btnIcons.prev.classes);
} }
function AngularImageViewerComponent_div_12_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r68 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_div_12_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r68); const ctx_r67 = ɵngcc0.ɵɵnextContext(2); return ctx_r67.prevImage($event); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r61 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r61.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r61.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r61.config.btnIcons.prev.text);
} }
function AngularImageViewerComponent_div_12_button_3_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span");
} if (rf & 2) {
    const ctx_r69 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassMap(ctx_r69.config.btnIcons.next.classes);
} }
function AngularImageViewerComponent_div_12_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r71 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 16);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_div_12_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r71); const ctx_r70 = ɵngcc0.ɵɵnextContext(2); return ctx_r70.nextImage($event); });
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_div_12_button_3_span_1_Template, 1, 2, "span", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r62 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r62.config.btnClass);
    ɵngcc0.ɵɵproperty("disabled", ctx_r62.index === ctx_r62.src.length - 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r62.config.btnIcons.next.classes);
} }
function AngularImageViewerComponent_div_12_a_4_Template(rf, ctx) { if (rf & 1) {
    const _r73 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_div_12_a_4_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r73); const ctx_r72 = ɵngcc0.ɵɵnextContext(2); return ctx_r72.nextImage($event); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r63 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMap(ctx_r63.config.btnClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r63.config.btnSubClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r63.config.btnIcons.next.text);
} }
function AngularImageViewerComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_div_12_button_1_Template, 2, 4, "button", 15);
    ɵngcc0.ɵɵtemplate(2, AngularImageViewerComponent_div_12_a_2_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵtemplate(3, AngularImageViewerComponent_div_12_button_3_Template, 2, 4, "button", 15);
    ɵngcc0.ɵɵtemplate(4, AngularImageViewerComponent_div_12_a_4_Template, 3, 5, "a", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.config.btnShow.next);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.config.btnIcons.prev.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.config.btnShow.next);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r8.config.btnIcons.next.text);
} }
class CustomImageEvent {
    constructor(name, imageIndex) {
        this.name = name;
        this.imageIndex = imageIndex;
    }
}

const DEFAULT_CONFIG = {
    btnContainerClass: 'btn-container',
    btnClass: 'default',
    btnSubClass: 'material-icons',
    zoomFactor: 0.1,
    containerBackgroundColor: '#ccc',
    wheelZoom: false,
    allowFullscreen: true,
    allowKeyboardNavigation: true,
    btnShow: {
        zoomIn: true,
        zoomOut: true,
        rotateClockwise: true,
        rotateCounterClockwise: true,
        next: true,
        prev: true,
        reset: true
    },
    btnIcons: {
        zoomIn: {
            classes: 'fa fa-plus',
            text: 'zoom_in'
        },
        zoomOut: {
            classes: 'fa fa-minus',
            text: 'zoom_out'
        },
        rotateClockwise: {
            classes: 'fa fa-repeat',
            text: 'rotate_right'
        },
        rotateCounterClockwise: {
            classes: 'fa fa-undo',
            text: 'rotate_left'
        },
        next: {
            classes: 'fa fa-arrow-right',
            text: 'arrow_right'
        },
        prev: {
            classes: 'fa fa-arrow-left',
            text: 'arrow_left'
        },
        fullscreen: {
            classes: 'fa fa-arrows-alt',
            text: 'fullscreen'
        },
        reset: {
            classes: 'fa fa-undo',
            text: 'restore'
        },
    }
};
class AngularImageViewerComponent {
    constructor(moduleConfig, sanitizer) {
        this.moduleConfig = moduleConfig;
        this.sanitizer = sanitizer;
        this.index = 0;
        this.indexChange = new EventEmitter();
        this.configChange = new EventEmitter();
        this.customImageEvent = new EventEmitter();
        this.styleHeight = '100%';
        this.style = { transform: '', msTransform: '', oTransform: '', webkitTransform: '' };
        this.fullscreen = false;
        this.loading = true;
        this.scale = 1;
        this.rotation = 0;
        this.translateX = 0;
        this.translateY = 0;
        this.hovered = false;
    }
    ngOnChanges(changes) {
        if (changes.screenHeightOccupied) {
            this.styleHeight = 'calc(100% - ' + this.screenHeightOccupied + 'px)';
            // console.log('Style Height:', this.styleHeight);
        }
    }
    ngOnInit() {
        const merged = this.mergeConfig(DEFAULT_CONFIG, this.moduleConfig);
        this.config = this.mergeConfig(merged, this.config);
        this.triggerConfigBinding();
    }
    nextImage(event) {
        if (this.canNavigate(event) && this.index < this.src.length - 1) {
            this.loading = true;
            this.index++;
            this.triggerIndexBinding();
            this.reset();
        }
    }
    prevImage(event) {
        if (this.canNavigate(event) && this.index > 0) {
            this.loading = true;
            this.index--;
            this.triggerIndexBinding();
            this.reset();
        }
    }
    zoomIn() {
        this.scale *= (1 + this.config.zoomFactor);
        this.updateStyle();
    }
    zoomOut() {
        if (this.scale > this.config.zoomFactor) {
            this.scale /= (1 + this.config.zoomFactor);
        }
        this.updateStyle();
    }
    scrollZoom(evt) {
        if (this.config.wheelZoom) {
            evt.deltaY > 0 ? this.zoomOut() : this.zoomIn();
            return false;
        }
    }
    rotateClockwise() {
        this.rotation += 90;
        this.updateStyle();
    }
    rotateCounterClockwise() {
        this.rotation -= 90;
        this.updateStyle();
    }
    onLoad(url) {
        // console.log('Loading Image Done:', url);
        this.loading = false;
    }
    onLoadStart(url) {
        // console.log('Loading Image:', url);
        this.loading = true;
    }
    imageNotFound(url) {
        // console.log('Image not found Url:', url);
    }
    onDragOver(evt) {
        this.translateX += (evt.clientX - this.prevX);
        this.translateY += (evt.clientY - this.prevY);
        this.prevX = evt.clientX;
        this.prevY = evt.clientY;
        this.updateStyle();
    }
    onDragStart(evt) {
        if (evt.dataTransfer && evt.dataTransfer.setDragImage) {
            evt.dataTransfer.setDragImage(evt.target.nextElementSibling, 0, 0);
        }
        this.prevX = evt.clientX;
        this.prevY = evt.clientY;
    }
    toggleFullscreen() {
        this.fullscreen = !this.fullscreen;
        if (!this.fullscreen) {
            this.reset();
        }
    }
    triggerIndexBinding() {
        this.indexChange.emit(this.index);
    }
    triggerConfigBinding() {
        this.configChange.next(this.config);
    }
    fireCustomEvent(name, imageIndex) {
        this.customImageEvent.emit(new CustomImageEvent(name, imageIndex));
    }
    reset() {
        this.scale = 1;
        this.rotation = 0;
        this.translateX = 0;
        this.translateY = 0;
        this.updateStyle();
    }
    onMouseOver() {
        this.hovered = true;
    }
    onMouseLeave() {
        this.hovered = false;
    }
    canNavigate(event) {
        return event == null || (this.config.allowKeyboardNavigation && this.hovered);
    }
    updateStyle() {
        this.style.transform = `translate(${this.translateX}px, ${this.translateY}px) rotate(${this.rotation}deg) scale(${this.scale})`;
        this.style.msTransform = this.style.transform;
        this.style.webkitTransform = this.style.transform;
        this.style.oTransform = this.style.transform;
    }
    mergeConfig(defaultValues, overrideValues) {
        let result = Object.assign({}, defaultValues);
        if (overrideValues) {
            result = Object.assign(Object.assign({}, defaultValues), overrideValues);
            if (overrideValues.btnIcons) {
                result.btnIcons = Object.assign(Object.assign({}, defaultValues.btnIcons), overrideValues.btnIcons);
            }
        }
        return result;
    }
}
AngularImageViewerComponent.ɵfac = function AngularImageViewerComponent_Factory(t) { return new (t || AngularImageViewerComponent)(ɵngcc0.ɵɵdirectiveInject('config', 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
AngularImageViewerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AngularImageViewerComponent, selectors: [["angular-image-viewer"]], hostBindings: function AngularImageViewerComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup.ArrowRight", function AngularImageViewerComponent_keyup_ArrowRight_HostBindingHandler($event) { return ctx.nextImage($event); }, false, ɵngcc0.ɵɵresolveWindow)("keyup.ArrowLeft", function AngularImageViewerComponent_keyup_ArrowLeft_HostBindingHandler($event) { return ctx.prevImage($event); }, false, ɵngcc0.ɵɵresolveWindow)("mouseover", function AngularImageViewerComponent_mouseover_HostBindingHandler() { return ctx.onMouseOver(); })("mouseleave", function AngularImageViewerComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); });
    } }, inputs: { index: "index", config: "config", src: "src", screenHeightOccupied: "screenHeightOccupied" }, outputs: { indexChange: "indexChange", configChange: "configChange", customImageEvent: "customImageEvent" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 13, vars: 18, consts: [[1, "img-container", 3, "appScreenfull", "wheel", "dragover"], ["alt", "Image not found...", 3, "src", "ngStyle", "dragstart", "load", "error", "loadstart"], ["class", "spinner-container", 4, "ngIf"], [1, "btn-container"], [4, "ngIf"], [4, "ngFor", "ngForOf"], ["class", "nav-button-container", 4, "ngIf"], [1, "spinner-container"], [1, "spinner"], ["type", "button", 3, "class", "click", 4, "ngIf"], [3, "class", "click", 4, "ngIf"], ["type", "button", 3, "click"], [3, "click"], [3, "class", 4, "ngIf"], [1, "nav-button-container"], ["type", "button", 3, "class", "disabled", "click", 4, "ngIf"], ["type", "button", 3, "disabled", "click"]], template: function AngularImageViewerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("wheel", function AngularImageViewerComponent_Template_div_wheel_0_listener($event) { return ctx.scrollZoom($event); })("dragover", function AngularImageViewerComponent_Template_div_dragover_0_listener($event) { return ctx.onDragOver($event); });
        ɵngcc0.ɵɵelementStart(1, "img", 1);
        ɵngcc0.ɵɵlistener("dragstart", function AngularImageViewerComponent_Template_img_dragstart_1_listener($event) { return ctx.onDragStart($event); })("load", function AngularImageViewerComponent_Template_img_load_1_listener() { return ctx.onLoad(ctx.src[ctx.index]); })("error", function AngularImageViewerComponent_Template_img_error_1_listener() { return ctx.imageNotFound(ctx.src[ctx.index]); })("loadstart", function AngularImageViewerComponent_Template_img_loadstart_1_listener() { return ctx.onLoadStart(ctx.src[ctx.index]); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(2, "div");
        ɵngcc0.ɵɵtemplate(3, AngularImageViewerComponent_div_3_Template, 2, 0, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵtemplate(5, AngularImageViewerComponent_ng_container_5_Template, 3, 2, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(6, AngularImageViewerComponent_ng_container_6_Template, 3, 2, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(7, AngularImageViewerComponent_ng_container_7_Template, 3, 2, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(8, AngularImageViewerComponent_ng_container_8_Template, 3, 2, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(9, AngularImageViewerComponent_ng_container_9_Template, 3, 2, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(10, AngularImageViewerComponent_ng_container_10_Template, 3, 2, "ng-container", 4);
        ɵngcc0.ɵɵtemplate(11, AngularImageViewerComponent_ng_container_11_Template, 3, 2, "ng-container", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(12, AngularImageViewerComponent_div_12_Template, 5, 4, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("height", ctx.styleHeight)("background-color", ctx.config.containerBackgroundColor);
        ɵngcc0.ɵɵproperty("appScreenfull", ctx.fullscreen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("src", ctx.src[ctx.index], ɵngcc0.ɵɵsanitizeUrl)("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMap(ctx.config.btnContainerClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.rotateCounterClockwise);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.rotateClockwise);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.zoomOut);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.zoomIn);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.allowFullscreen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.reset);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.config.customBtns);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.src.length > 1);
    } }, directives: function () { return [FullScreenDirective, ɵngcc2.NgStyle, ɵngcc2.NgIf, ɵngcc2.NgForOf]; }, styles: [".img-container[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;align-items:center;overflow:hidden}.img-container[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]{position:absolute;z-index:98;text-align:right;bottom:0;right:0;width:100%}.img-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:100%;max-height:100%}.img-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .img-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{z-index:99;position:relative}.img-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:not(:disabled), .img-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:not(:disabled){cursor:pointer}a.default[_ngcontent-%COMP%], button.default[_ngcontent-%COMP%]{height:40px;width:40px;border:1px solid #555;border-radius:50%;background-color:#fff;opacity:.7;transition:opacity .2s}a.default[_ngcontent-%COMP%]:hover, button.default[_ngcontent-%COMP%]:hover{opacity:1}a.default[_ngcontent-%COMP%]:disabled, button.default[_ngcontent-%COMP%]:disabled{opacity:.25}.nav-button-container[_ngcontent-%COMP%] > a[_ngcontent-%COMP%], .nav-button-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:relative;right:0;margin:0 10px}.nav-button-container[_ngcontent-%COMP%]{text-align:center;position:absolute;z-index:98;bottom:50px;left:0;right:0}.spinner-container[_ngcontent-%COMP%]{position:absolute;left:0;right:0;top:0;bottom:0;width:60px;height:60px;margin:auto;padding:10px;background-color:rgba(0,0,0,.4);border-radius:25%}.spinner[_ngcontent-%COMP%]{border:7px solid;border-color:#ccc #ccc #222;border-radius:50%;height:100%;width:100%;box-sizing:border-box;-webkit-animation:rotation 2s linear infinite;animation:rotation 2s linear infinite}@keyframes rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}@-webkit-keyframes rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}"] });
AngularImageViewerComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['config',] }] },
    { type: DomSanitizer }
];
AngularImageViewerComponent.propDecorators = {
    src: [{ type: Input }],
    screenHeightOccupied: [{ type: Input }],
    index: [{ type: Input }],
    config: [{ type: Input }],
    indexChange: [{ type: Output }],
    configChange: [{ type: Output }],
    customImageEvent: [{ type: Output }],
    nextImage: [{ type: HostListener, args: ['window:keyup.ArrowRight', ['$event'],] }],
    prevImage: [{ type: HostListener, args: ['window:keyup.ArrowLeft', ['$event'],] }],
    onMouseOver: [{ type: HostListener, args: ['mouseover',] }],
    onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularImageViewerComponent, [{
        type: Component,
        args: [{
                selector: 'angular-image-viewer',
                template: "<div [appScreenfull]=\"fullscreen\" class=\"img-container\" [style.height]=\"styleHeight\"\n    [style.backgroundColor]=\"config.containerBackgroundColor\" (wheel)=\"scrollZoom($event)\"\n    (dragover)=\"onDragOver($event)\">\n    <img [src]=\"src[index]\" [ngStyle]=\"style\" alt=\"Image not found...\" (dragstart)=\"onDragStart($event)\"\n        (load)=\"onLoad(src[index])\" (error)=\"imageNotFound(src[index])\" (loadstart)=\"onLoadStart(src[index])\" />\n    <!-- Div below will be used to hide the 'ghost' image when dragging -->\n    <div></div>\n    <div class=\"spinner-container\" *ngIf=\"loading\">\n        <div class=\"spinner\"></div>\n    </div>\n\n    <!-- Button Container -->\n    <div class=\"btn-container\" [class]=\"config.btnContainerClass\">\n        <!-- Rotate Counter Clockwise -->\n        <ng-container *ngIf=\"config.btnShow.rotateCounterClockwise\">\n            <button type=\"button\" [class]=\"config.btnClass\"\n                (click)=\"rotateCounterClockwise()\" *ngIf=\"config.btnIcons.rotateCounterClockwise.classes\" >\n                <span [class]=\"config.btnIcons.rotateCounterClockwise.classes\"></span>\n            </button>\n            <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.rotateCounterClockwise.text\" (click)=\"rotateCounterClockwise()\">\n                <span [class]=\"config.btnSubClass\">{{config.btnIcons.rotateCounterClockwise.text}}</span>\n            </a>\n        </ng-container>\n\n        <!-- Rotate Clockwise -->\n        <ng-container *ngIf=\"config.btnShow.rotateClockwise\">\n            <button type=\"button\" [class]=\"config.btnClass\"\n                (click)=\"rotateClockwise()\" *ngIf=\"config.btnIcons.rotateClockwise.classes\" >\n                <span [class]=\"config.btnIcons.rotateClockwise.classes\"></span>\n            </button>\n            <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.rotateClockwise.text\" (click)=\"rotateClockwise()\">\n                <span [class]=\"config.btnSubClass\">{{config.btnIcons.rotateClockwise.text}}</span>\n            </a>\n        </ng-container>\n\n        <!-- Zoom Out -->\n        <ng-container *ngIf=\"config.btnShow.zoomOut\">\n            <button type=\"button\" [class]=\"config.btnClass\"\n                (click)=\"zoomOut()\" *ngIf=\"config.btnIcons.zoomOut.classes\" >\n                <span [class]=\"config.btnIcons.zoomOut.classes\"></span>\n            </button>\n            <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.zoomOut.text\" (click)=\"zoomOut()\">\n                <span [class]=\"config.btnSubClass\">{{config.btnIcons.zoomOut.text}}</span>\n            </a>\n        </ng-container>\n\n        <!-- Zoom In -->\n        <ng-container *ngIf=\"config.btnShow.zoomIn\">\n            <button type=\"button\" [class]=\"config.btnClass\"\n                (click)=\"zoomIn()\" *ngIf=\"config.btnIcons.zoomIn.classes\" >\n                <span [class]=\"config.btnIcons.zoomIn.classes\"></span>\n            </button>\n            <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.zoomIn.text\" (click)=\"zoomIn()\">\n                <span [class]=\"config.btnSubClass\">{{config.btnIcons.zoomIn.text}}</span>\n            </a>\n        </ng-container>\n\n        <!-- Fullscreen -->\n        <ng-container *ngIf=\"config.allowFullscreen\">\n            <button type=\"button\" [class]=\"config.btnClass\"\n                (click)=\"toggleFullscreen()\" *ngIf=\"config.btnIcons.fullscreen.classes\" >\n                <span [class]=\"config.btnIcons.fullscreen.classes\"></span>\n            </button>\n            <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.fullscreen.text\" (click)=\"toggleFullscreen()\">\n                <span [class]=\"config.btnSubClass\">{{config.btnIcons.fullscreen.text}}</span>\n            </a>\n        </ng-container>\n\n        <!-- Reset -->\n        <ng-container *ngIf=\"config.btnShow.reset\">\n            <button type=\"button\" [class]=\"config.btnClass\"\n                (click)=\"reset()\" *ngIf=\"config.btnIcons.reset.classes\" >\n                <span [class]=\"config.btnIcons.reset.classes\"></span>\n            </button>\n            <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.reset.text\" (click)=\"reset()\">\n                <span [class]=\"config.btnSubClass\">{{config.btnIcons.reset.text}}</span>\n            </a>\n        </ng-container>\n\n        <!-- Custom Buttons -->\n        <ng-container *ngFor=\"let cBtn of config.customBtns\">\n            <button *ngIf=\"cBtn.icon.classes\" type=\"button\" [class]=\"config.btnClass\"\n                (click)=\"fireCustomEvent(cBtn.name, index)\">\n                <span *ngIf=\"cBtn.icon.classes\" [class]=\"cBtn.icon.classes\"></span>\n            </button>\n            <ng-container *ngIf=\"cBtn.icon.text\">\n                <a [class]=\"config.btnClass\" *ngIf=\"cBtn.icon.text\" (click)=\"fireCustomEvent(cBtn.name, index)\">\n                    <span [class]=\"config.btnSubClass\">{{cBtn.icon.text}}</span>\n                </a>\n            </ng-container>\n        </ng-container>\n    </div>\n\n    <!-- Prev / Next Nav Container -->\n    <div class=\"nav-button-container\" *ngIf=\"src.length > 1\">\n        <button *ngIf=\"config.btnShow.next\" type=\"button\" [class]=\"config.btnClass\" (click)=\"prevImage($event)\" [disabled]=\"index === 0\">\n            <span *ngIf=\"config.btnIcons.prev.classes\" [class]=\"config.btnIcons.prev.classes\"></span>\n        </button>\n        <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.prev.text\" (click)=\"prevImage($event)\">\n            <span [class]=\"config.btnSubClass\">{{config.btnIcons.prev.text}}</span>\n        </a>\n        <button *ngIf=\"config.btnShow.next\" type=\"button\" [class]=\"config.btnClass\" (click)=\"nextImage($event)\"\n            [disabled]=\"index === src.length - 1\">\n            <span *ngIf=\"config.btnIcons.next.classes\" [class]=\"config.btnIcons.next.classes\"></span>\n        </button>\n        <a [class]=\"config.btnClass\" *ngIf=\"config.btnIcons.next.text\" (click)=\"nextImage($event)\">\n            <span [class]=\"config.btnSubClass\">{{config.btnIcons.next.text}}</span>\n        </a>\n    </div>\n</div>",
                styles: [".img-container{width:100%;display:flex;justify-content:center;align-items:center;overflow:hidden}.img-container .btn-container{position:absolute;z-index:98;text-align:right;bottom:0;right:0;width:100%}.img-container img{max-width:100%;max-height:100%}.img-container a,.img-container button{z-index:99;position:relative}.img-container a:not(:disabled),.img-container button:not(:disabled){cursor:pointer}a.default,button.default{height:40px;width:40px;border:1px solid #555;border-radius:50%;background-color:#fff;opacity:.7;transition:opacity .2s}a.default:hover,button.default:hover{opacity:1}a.default:disabled,button.default:disabled{opacity:.25}.nav-button-container>a,.nav-button-container>button{position:relative;right:0;margin:0 10px}.nav-button-container{text-align:center;position:absolute;z-index:98;bottom:50px;left:0;right:0}.spinner-container{position:absolute;left:0;right:0;top:0;bottom:0;width:60px;height:60px;margin:auto;padding:10px;background-color:rgba(0,0,0,.4);border-radius:25%}.spinner{border:7px solid;border-color:#ccc #ccc #222;border-radius:50%;height:100%;width:100%;box-sizing:border-box;-webkit-animation:rotation 2s linear infinite;animation:rotation 2s linear infinite}@keyframes rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}@-webkit-keyframes rotation{0%{-webkit-transform:rotate(0deg)}to{-webkit-transform:rotate(359deg)}}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: ['config']
            }] }, { type: ɵngcc1.DomSanitizer }]; }, { index: [{
            type: Input
        }], indexChange: [{
            type: Output
        }], configChange: [{
            type: Output
        }], customImageEvent: [{
            type: Output
        }], config: [{
            type: Input
        }], nextImage: [{
            type: HostListener,
            args: ['window:keyup.ArrowRight', ['$event']]
        }], prevImage: [{
            type: HostListener,
            args: ['window:keyup.ArrowLeft', ['$event']]
        }], onMouseOver: [{
            type: HostListener,
            args: ['mouseover']
        }], onMouseLeave: [{
            type: HostListener,
            args: ['mouseleave']
        }], src: [{
            type: Input
        }], screenHeightOccupied: [{
            type: Input
        }] }); })();

// import * as screenfull from 'screenfull';
class FullScreenDirective {
    constructor(el) {
        this.el = el;
    }
    ngOnChanges(changes) {
        // console.log('fullscreenState isFirstChange:', changes["fullscreenState"].isFirstChange());
        // console.log('fullscreenState', this.fullscreenState);
        // if (screenfull.isEnabled) {
        //   screenfull.toggle(this.el.nativeElement);
        // }
        // if (this.fullscreenState && screenfull.isEnabled) {
        //   screenfull.request(this.el.nativeElement);
        // } else if (screenfull.isEnabled) {
        //   screenfull.exit();
        // }
        // tslint:disable-next-line: no-string-literal
        if (!changes['fullscreenState'].isFirstChange()) {
            if (this.fullscreenState) {
                const element = this.el.nativeElement;
                // tslint:disable-next-line: max-line-length
                const requestMethod = element.requestFullscreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;
                if (requestMethod) { // Native full screen.
                    requestMethod.call(element);
                }
                else {
                    console.log('FullScreen Request Method Not Supported on this browser.');
                }
            }
            else {
                const element = document;
                // tslint:disable-next-line: max-line-length
                const requestMethod = element.cancelFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullScreen;
                if (requestMethod) { // Native Cancel full screen.
                    requestMethod.call(element);
                }
                else {
                    console.log('FullScreen Cancel Request Method Not Supported on this browser.');
                }
            }
        }
    }
    ngOnInit() {
    }
}
FullScreenDirective.ɵfac = function FullScreenDirective_Factory(t) { return new (t || FullScreenDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FullScreenDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FullScreenDirective, selectors: [["", "appScreenfull", ""]], inputs: { fullscreenState: ["appScreenfull", "fullscreenState"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
FullScreenDirective.ctorParameters = () => [
    { type: ElementRef }
];
FullScreenDirective.propDecorators = {
    fullscreenState: [{ type: Input, args: ['appScreenfull',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullScreenDirective, [{
        type: Directive,
        args: [{
                selector: '[appScreenfull]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fullscreenState: [{
            type: Input,
            args: ['appScreenfull']
        }] }); })();

// import { ImageViewerConfig } from 'dist/angular-image-viewer/public-api';
class AngularImageViewerModule {
}
AngularImageViewerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularImageViewerModule });
AngularImageViewerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularImageViewerModule_Factory(t) { return new (t || AngularImageViewerModule)(); }, imports: [[
            CommonModule,
            BrowserModule,
            FormsModule,
            BrowserAnimationsModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularImageViewerModule, { declarations: function () { return [AngularImageViewerComponent,
        FullScreenDirective]; }, imports: function () { return [CommonModule,
        BrowserModule,
        FormsModule,
        BrowserAnimationsModule]; }, exports: function () { return [AngularImageViewerComponent,
        FullScreenDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularImageViewerModule, [{
        type: NgModule,
        args: [{
                declarations: [AngularImageViewerComponent, FullScreenDirective],
                imports: [
                    CommonModule,
                    BrowserModule,
                    FormsModule,
                    BrowserAnimationsModule,
                ],
                exports: [AngularImageViewerComponent, FullScreenDirective]
            }]
    }], null, null); })();

/*
 * Public API Surface of angular-image-viewer
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AngularImageViewerComponent, AngularImageViewerModule, CustomImageEvent, FullScreenDirective };

//# sourceMappingURL=hreimer-angular-image-viewer.js.map