import { __decorate, __param } from 'tslib';
import { EventEmitter, Optional, Inject, ViewChild, Input, Output, HostListener, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { CdkDrag, DragDropModule } from '@angular/cdk/drag-drop';
import { CommonModule } from '@angular/common';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/cdk/drag-drop';

function AngularImageViewerComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.imageName);
} }
function AngularImageViewerComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelement(1, "div", 19);
    ɵngcc0.ɵɵelementEnd();
} }
function AngularImageViewerComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 20);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.toggleFullscreen(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r2.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r2.config.primaryColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r2.config.btnIcons.fullscreen);
} }
function AngularImageViewerComponent_button_8_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_button_8_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const cBtn_r11 = ctx.$implicit; const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.fireCustomEvent(cBtn_r11.name, ctx_r12.index); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cBtn_r11 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r3.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r3.config.primaryColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(cBtn_r11.icon);
} }
function AngularImageViewerComponent_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.rotateCounterClockwise(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r4.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r4.config.primaryColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r4.config.btnIcons.rotateCounterClockwise);
} }
function AngularImageViewerComponent_button_10_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_button_10_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.rotateClockwise(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r5.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r5.config.primaryColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r5.config.btnIcons.rotateClockwise);
} }
function AngularImageViewerComponent_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_button_12_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.zoomIn(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r6.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r6.config.primaryColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r6.config.btnIcons.zoomIn);
} }
function AngularImageViewerComponent_button_13_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 21);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.zoomOut(); });
    ɵngcc0.ɵɵelement(1, "span");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(ctx_r7.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r7.config.primaryColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r7.config.btnIcons.zoomOut);
} }
function AngularImageViewerComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 22);
    ɵngcc0.ɵɵelementStart(1, "button", 23, 24);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_div_14_Template_button_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const _r22 = ɵngcc0.ɵɵreference(2); const ctx_r24 = ɵngcc0.ɵɵnextContext(); ctx_r24.prevImage($event); return _r22.blur(); });
    ɵngcc0.ɵɵelement(3, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "button", 23, 25);
    ɵngcc0.ɵɵlistener("click", function AngularImageViewerComponent_div_14_Template_button_click_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const _r23 = ɵngcc0.ɵɵreference(5); const ctx_r26 = ɵngcc0.ɵɵnextContext(); ctx_r26.nextImage($event); return _r23.blur(); });
    ɵngcc0.ɵɵelement(6, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r8.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r8.config.primaryColor);
    ɵngcc0.ɵɵproperty("disabled", ctx_r8.index === 0);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r8.config.btnIcons.prev);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(ctx_r8.config.btnClass);
    ɵngcc0.ɵɵstyleProp("color", ctx_r8.config.primaryColor);
    ɵngcc0.ɵɵproperty("disabled", ctx_r8.index === ctx_r8.src.length - 1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassMap(ctx_r8.config.btnIcons.next);
} }
class CustomImageEvent {
    constructor(name, imageIndex) {
        this.name = name;
        this.imageIndex = imageIndex;
    }
}

const DEFAULT_CONFIG = {
    btnClass: 'default',
    zoomFactor: 0.1,
    containerBackgroundColor: '#e4dede',
    primaryColor: '',
    wheelZoom: false,
    allowFullscreen: true,
    allowKeyboardNavigation: true,
    btnShow: {
        zoomIn: true,
        zoomOut: true,
        rotateClockwise: true,
        rotateCounterClockwise: true,
        next: true,
        prev: true
    },
    btnIcons: {
        zoomIn: 'fa fa-plus',
        zoomOut: 'fa fa-minus',
        rotateClockwise: 'fa fa-refresh',
        rotateCounterClockwise: 'fa fa-undo',
        next: 'fa fa-chevron-right',
        prev: 'fa fa-chevron-left',
        fullscreen: 'fa fa-arrows-alt',
    }
};
let AngularImageViewerComponent = class AngularImageViewerComponent {
    constructor(moduleConfig) {
        this.moduleConfig = moduleConfig;
        this.index = 0;
        this.footerTexts = [
            'Image',
            'of',
            'View previous or next image',
            'using < > on the keyboard'
        ];
        this.indexChange = new EventEmitter();
        this.configChange = new EventEmitter();
        this.customImageEvent = new EventEmitter();
        this.styleHeight = '98vh';
        this.style = { transform: '', msTransform: '', oTransform: '', webkitTransform: '' };
        this.fullscreen = false;
        this.loading = true;
        this.isDragOn = false;
        this.scale = 1;
        this.rotation = 0;
        this.hovered = false;
    }
    ngOnChanges(changes) {
        if (changes.screenHeightOccupied) {
            this.styleHeight = 'calc(98vh - ' + this.screenHeightOccupied + 'px)';
        }
        else if (changes.index) {
            this.reset();
        }
    }
    ngOnInit() {
        const merged = this.mergeConfig(DEFAULT_CONFIG, this.moduleConfig);
        this.config = this.mergeConfig(merged, this.config);
        this.triggerConfigBinding();
    }
    nextImage(event) {
        if (this.canNavigate(event) && this.index < this.src.length - 1) {
            this.loading = true;
            this.index++;
            this.triggerIndexBinding();
            this.reset();
        }
    }
    prevImage(event) {
        if (this.canNavigate(event) && this.index > 0) {
            this.loading = true;
            this.index--;
            this.triggerIndexBinding();
            this.reset();
        }
    }
    zoomIn() {
        this.scale *= (1 + this.config.zoomFactor);
        this.updateStyle();
    }
    zoomOut() {
        if (this.scale > this.config.zoomFactor) {
            this.scale /= (1 + this.config.zoomFactor);
        }
        this.updateStyle();
    }
    scrollZoom(evt) {
        if (this.config.wheelZoom) {
            evt.deltaY > 0 ? this.zoomOut() : this.zoomIn();
            return false;
        }
    }
    rotateClockwise() {
        this.rotation += 90;
        this.updateStyle();
    }
    rotateCounterClockwise() {
        this.rotation -= 90;
        this.updateStyle();
    }
    onLoad() {
        this.loading = false;
    }
    onLoadStart() {
        this.loading = true;
    }
    imageNotFound() {
    }
    onDragStart(evt) {
        if (evt.source._dragRef._initialTransform && evt.source._dragRef._initialTransform.length > 0) {
            const myTranslate = evt.source._dragRef._initialTransform.split(' rotate')[0];
            const myRotate = this.style.transform.split(' rotate')[1];
            evt.source._dragRef._initialTransform = `${myTranslate} rotate${myRotate}`;
        }
        else {
            evt.source._dragRef._initialTransform = this.style.transform;
        }
    }
    toggleFullscreen() {
        this.fullscreen = !this.fullscreen;
        if (!this.fullscreen) {
            this.reset();
        }
    }
    triggerIndexBinding() {
        this.indexChange.emit(this.index);
    }
    triggerConfigBinding() {
        this.configChange.next(this.config);
    }
    fireCustomEvent(name, imageIndex) {
        this.customImageEvent.emit(new CustomImageEvent(name, imageIndex));
    }
    reset() {
        this.scale = 1;
        this.rotation = 0;
        this.updateStyle();
        this.cdkDrag.reset();
    }
    onMouseOver() {
        this.hovered = true;
    }
    onMouseLeave() {
        this.hovered = false;
    }
    canNavigate(event) {
        if (event.type === 'keyup') {
            return (this.config.allowKeyboardNavigation && this.hovered);
        }
        else if (event.type === 'click') {
            return this.hovered;
        }
    }
    updateStyle() {
        this.style.transform = `rotate(${this.rotation}deg) scale(${this.scale})`;
    }
    mergeConfig(defaultValues, overrideValues) {
        let result = Object.assign({}, defaultValues);
        if (overrideValues) {
            result = Object.assign(Object.assign({}, defaultValues), overrideValues);
            if (overrideValues.btnIcons) {
                result.btnIcons = Object.assign(Object.assign({}, defaultValues.btnIcons), overrideValues.btnIcons);
            }
        }
        return result;
    }
};
AngularImageViewerComponent.ɵfac = function AngularImageViewerComponent_Factory(t) { return new (t || AngularImageViewerComponent)(ɵngcc0.ɵɵdirectiveInject('config', 8)); };
AngularImageViewerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AngularImageViewerComponent, selectors: [["angular-image-viewer"]], viewQuery: function AngularImageViewerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(CdkDrag, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkDrag = _t.first);
    } }, hostBindings: function AngularImageViewerComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keyup.ArrowRight", function AngularImageViewerComponent_keyup_ArrowRight_HostBindingHandler($event) { return ctx.nextImage($event); }, false, ɵngcc0.ɵɵresolveWindow)("keyup.ArrowLeft", function AngularImageViewerComponent_keyup_ArrowLeft_HostBindingHandler($event) { return ctx.prevImage($event); }, false, ɵngcc0.ɵɵresolveWindow)("mouseover", function AngularImageViewerComponent_mouseover_HostBindingHandler() { return ctx.onMouseOver(); })("mouseleave", function AngularImageViewerComponent_mouseleave_HostBindingHandler() { return ctx.onMouseLeave(); });
    } }, inputs: { index: "index", footerTexts: "footerTexts", config: "config", src: "src", screenHeightOccupied: "screenHeightOccupied", imageName: "imageName" }, outputs: { indexChange: "indexChange", configChange: "configChange", customImageEvent: "customImageEvent" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 24, vars: 22, consts: [[1, "img-container", 3, "appScreenfull", "wheel"], ["class", "image-name", 4, "ngIf"], ["cdkDrag", "", 1, "drag-element"], ["alt", "", 3, "src", "ngStyle", "cdkDragStarted", "load", "loadstart", "error"], ["class", "spinner-container", 4, "ngIf"], [1, "button-container"], ["type", "button", "id", "ngx-fs-btn", 3, "class", "color", "click", 4, "ngIf"], [1, "button-container-bottom"], ["type", "button", 3, "class", "color", "click", 4, "ngFor", "ngForOf"], ["type", "button", 3, "class", "color", "click", 4, "ngIf"], [1, "button-zoom-in-out-container"], ["class", "nav-button-container", 4, "ngIf"], [1, "footer-section"], [1, "image-txt-count-left-align"], [1, "footer-txt-right-align"], [1, "footer-txt-right-align-title"], [1, "footer-txt-right-align-note"], [1, "image-name"], [1, "spinner-container"], [1, "spinner"], ["type", "button", "id", "ngx-fs-btn", 3, "click"], ["type", "button", 3, "click"], [1, "nav-button-container"], ["type", "button", 3, "disabled", "click"], ["prevImg", ""], ["nextImg", ""]], template: function AngularImageViewerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("wheel", function AngularImageViewerComponent_Template_div_wheel_0_listener($event) { return ctx.scrollZoom($event); });
        ɵngcc0.ɵɵtemplate(1, AngularImageViewerComponent_div_1_Template, 3, 1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "img", 3);
        ɵngcc0.ɵɵlistener("cdkDragStarted", function AngularImageViewerComponent_Template_img_cdkDragStarted_3_listener($event) { return ctx.onDragStart($event); })("load", function AngularImageViewerComponent_Template_img_load_3_listener() { return ctx.onLoad(); })("loadstart", function AngularImageViewerComponent_Template_img_loadstart_3_listener() { return ctx.onLoadStart(); })("error", function AngularImageViewerComponent_Template_img_error_3_listener() { return ctx.imageNotFound(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, AngularImageViewerComponent_div_4_Template, 2, 0, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "div", 5);
        ɵngcc0.ɵɵtemplate(6, AngularImageViewerComponent_button_6_Template, 2, 6, "button", 6);
        ɵngcc0.ɵɵelementStart(7, "div", 7);
        ɵngcc0.ɵɵtemplate(8, AngularImageViewerComponent_button_8_Template, 2, 6, "button", 8);
        ɵngcc0.ɵɵtemplate(9, AngularImageViewerComponent_button_9_Template, 2, 6, "button", 9);
        ɵngcc0.ɵɵtemplate(10, AngularImageViewerComponent_button_10_Template, 2, 6, "button", 9);
        ɵngcc0.ɵɵelementStart(11, "div", 10);
        ɵngcc0.ɵɵtemplate(12, AngularImageViewerComponent_button_12_Template, 2, 6, "button", 9);
        ɵngcc0.ɵɵtemplate(13, AngularImageViewerComponent_button_13_Template, 2, 6, "button", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(14, AngularImageViewerComponent_div_14_Template, 7, 14, "div", 11);
        ɵngcc0.ɵɵelementStart(15, "div", 12);
        ɵngcc0.ɵɵelementStart(16, "div", 13);
        ɵngcc0.ɵɵelementStart(17, "span");
        ɵngcc0.ɵɵtext(18);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "div", 14);
        ɵngcc0.ɵɵelementStart(20, "span", 15);
        ɵngcc0.ɵɵtext(21);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "span", 16);
        ɵngcc0.ɵɵtext(23);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("background-color", ctx.config.containerBackgroundColor);
        ɵngcc0.ɵɵproperty("appScreenfull", ctx.fullscreen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.imageName);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("src", ctx.src[ctx.index], ɵngcc0.ɵɵsanitizeUrl)("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loading);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.allowFullscreen);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.config.customBtns);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.rotateCounterClockwise);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.rotateClockwise);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.zoomIn);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.btnShow.zoomOut);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.src.length > 1);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate4("", ctx.footerTexts[0], " ", ctx.index + 1, " ", ctx.footerTexts[1], " ", ctx.src.length, "");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵstyleProp("color", ctx.config.primaryColor);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.footerTexts[2]);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.footerTexts[3]);
    } }, directives: function () { return [FullScreenDirective, ɵngcc1.NgIf, ɵngcc2.CdkDrag, ɵngcc1.NgStyle, ɵngcc1.NgForOf]; }, styles: [".img-container[_ngcontent-%COMP%]{position:relative;width:100%;height:100%;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;overflow:hidden}.img-container[_ngcontent-%COMP%]   .drag-element[_ngcontent-%COMP%]{position:absolute;top:35px;right:78px;width:calc(100% - 156px);height:calc(100% - 85px);cursor:-webkit-grab;cursor:grab;text-align:center}.img-container[_ngcontent-%COMP%]   .drag-element[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{padding:0;max-width:100%;max-height:100%}.img-container[_ngcontent-%COMP%]   .drag-element[_ngcontent-%COMP%]:active{cursor:-webkit-grabbing;cursor:grabbing}.img-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{z-index:99}.img-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:not(:disabled){cursor:pointer}#ngx-fs-btn[_ngcontent-%COMP%]{top:15px}button.default[_ngcontent-%COMP%]{height:24px;width:24px;border-radius:31px;opacity:.9;-webkit-transition:opacity .2s;transition:opacity .2s;font-size:12px;background:inherit;background-color:#fff;border:none;box-shadow:0 0 5px rgba(0,0,0,.3490196078)}button.default[_ngcontent-%COMP%]:focus{outline:0;opacity:1}button.default[_ngcontent-%COMP%]:hover{opacity:1}button.default[_ngcontent-%COMP%]:disabled{opacity:.3}.nav-button-container[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{position:relative;right:0;margin:0 10px}.nav-button-container[_ngcontent-%COMP%]{text-align:right;position:absolute;z-index:98;bottom:60px;left:0;right:10px}.nav-button-container[_ngcontent-%COMP%]   button.default[_ngcontent-%COMP%]{height:30px;margin:0;font-size:14px}.nav-button-container[_ngcontent-%COMP%]   button.default[_ngcontent-%COMP%]:first-child{border-radius:4px 0 0 4px}.nav-button-container[_ngcontent-%COMP%]   button.default[_ngcontent-%COMP%]:last-child{margin-left:10px;border-radius:0 4px 4px 0}.button-container[_ngcontent-%COMP%]{position:absolute;top:10px;right:10px;width:24px;height:calc(100% - 115px);z-index:98}.button-container[_ngcontent-%COMP%]   .button-container-bottom[_ngcontent-%COMP%]{position:absolute;bottom:0}.button-container[_ngcontent-%COMP%]   .button-container-bottom[_ngcontent-%COMP%]   button.default[_ngcontent-%COMP%]{margin-top:10px}.button-container[_ngcontent-%COMP%]   .button-container-bottom[_ngcontent-%COMP%]   .button-zoom-in-out-container[_ngcontent-%COMP%]{margin-top:15px}.button-container[_ngcontent-%COMP%]   .button-container-bottom[_ngcontent-%COMP%]   .button-zoom-in-out-container[_ngcontent-%COMP%]   button.default[_ngcontent-%COMP%]{margin:0;border-radius:0;height:30px}.button-container[_ngcontent-%COMP%]   .button-container-bottom[_ngcontent-%COMP%]   .button-zoom-in-out-container[_ngcontent-%COMP%]   button.default[_ngcontent-%COMP%]:first-child{margin-bottom:1px}.spinner-container[_ngcontent-%COMP%]{position:absolute;left:0;right:0;top:0;bottom:0;width:60px;height:60px;margin:auto;padding:10px;background-color:rgba(0,0,0,.4);border-radius:25%}.spinner[_ngcontent-%COMP%]{border-width:7px;border-style:solid;border-color:#ccc #ccc #222;border-radius:50%;height:100%;width:100%;box-sizing:border-box;-webkit-animation:2s linear infinite rotation;animation:2s linear infinite rotation}.footer-section[_ngcontent-%COMP%]{position:absolute;bottom:10px;left:0;width:100%;line-height:18px;z-index:98}.footer-section[_ngcontent-%COMP%]   .image-txt-count-left-align[_ngcontent-%COMP%]{float:left;padding:0 10px;font-family:\"Source Sans Pro SemiBold\";font-size:14;color:#333}.footer-section[_ngcontent-%COMP%]   .footer-txt-right-align[_ngcontent-%COMP%]{float:right;padding:0 10px;text-align:right}.footer-section[_ngcontent-%COMP%]   .footer-txt-right-align[_ngcontent-%COMP%]   span.footer-txt-right-align-title[_ngcontent-%COMP%]{display:block;font-family:\"Source Sans Pro SemiBold\";font-size:14}.footer-section[_ngcontent-%COMP%]   .footer-txt-right-align[_ngcontent-%COMP%]   span.footer-txt-right-align-note[_ngcontent-%COMP%]{color:#767676;font-family:\"Source Sans Pro\";font-size:12}.image-name[_ngcontent-%COMP%]{position:absolute;top:10px;left:10px;z-index:98;font-family:\"Source Sans Pro SemiBold\";font-size:16;color:#333}@keyframes rotation{from{-webkit-transform:rotate(0)}to{-webkit-transform:rotate(359deg)}}@-webkit-keyframes rotation{from{-webkit-transform:rotate(0)}to{-webkit-transform:rotate(359deg)}}"] });
AngularImageViewerComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: ['config',] }] }
];
__decorate([
    ViewChild(CdkDrag, { static: true })
], AngularImageViewerComponent.prototype, "cdkDrag", void 0);
__decorate([
    Input()
], AngularImageViewerComponent.prototype, "src", void 0);
__decorate([
    Input()
], AngularImageViewerComponent.prototype, "config", void 0);
__decorate([
    Input()
], AngularImageViewerComponent.prototype, "screenHeightOccupied", void 0);
__decorate([
    Input()
], AngularImageViewerComponent.prototype, "index", void 0);
__decorate([
    Input()
], AngularImageViewerComponent.prototype, "imageName", void 0);
__decorate([
    Input()
], AngularImageViewerComponent.prototype, "footerTexts", void 0);
__decorate([
    Output()
], AngularImageViewerComponent.prototype, "indexChange", void 0);
__decorate([
    Output()
], AngularImageViewerComponent.prototype, "configChange", void 0);
__decorate([
    Output()
], AngularImageViewerComponent.prototype, "customImageEvent", void 0);
__decorate([
    HostListener('window:keyup.ArrowRight', ['$event'])
], AngularImageViewerComponent.prototype, "nextImage", null);
__decorate([
    HostListener('window:keyup.ArrowLeft', ['$event'])
], AngularImageViewerComponent.prototype, "prevImage", null);
__decorate([
    HostListener('mouseover')
], AngularImageViewerComponent.prototype, "onMouseOver", null);
__decorate([
    HostListener('mouseleave')
], AngularImageViewerComponent.prototype, "onMouseLeave", null);
AngularImageViewerComponent = __decorate([ __param(0, Optional()), __param(0, Inject('config'))
], AngularImageViewerComponent);

// import * as screenfull from 'screenfull';
let FullScreenDirective = class FullScreenDirective {
    constructor(el) {
        this.el = el;
    }
    ngOnChanges(changes) {
        // tslint:disable-next-line: no-string-literal
        if (!changes['fullscreenState'].isFirstChange()) {
            if (this.fullscreenState) {
                const element = this.el.nativeElement;
                // tslint:disable-next-line: max-line-length
                const requestMethod = element.requestFullscreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;
                if (requestMethod) { // Native full screen.
                    requestMethod.call(element);
                }
                else {
                    console.log('FullScreen Request Method Not Supported on this browser.');
                }
            }
            else {
                const element = document;
                // tslint:disable-next-line: max-line-length
                const requestMethod = element.cancelFullscreen || element.webkitExitFullscreen || element.webkitCancelFullScreen || element.mozCancelFullScreen || element.msExitFullScreen;
                if (requestMethod) { // Native Cancel full screen.
                    requestMethod.call(element);
                }
                else {
                    console.error('Angular Image Viewer: FullScreen Cancel Request Method Not Supported on this browser.');
                }
            }
        }
    }
    ngOnInit() {
    }
};
FullScreenDirective.ɵfac = function FullScreenDirective_Factory(t) { return new (t || FullScreenDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FullScreenDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FullScreenDirective, selectors: [["", "appScreenfull", ""]], inputs: { fullscreenState: ["appScreenfull", "fullscreenState"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
FullScreenDirective.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input('appScreenfull')
], FullScreenDirective.prototype, "fullscreenState", void 0);

let AngularImageViewerModule = class AngularImageViewerModule {
};
AngularImageViewerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularImageViewerModule });
AngularImageViewerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularImageViewerModule_Factory(t) { return new (t || AngularImageViewerModule)(); }, imports: [[
            CommonModule,
            DragDropModule
        ],
        DragDropModule] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularImageViewerComponent, [{
        type: Component,
        args: [{
                // tslint:disable-next-line:component-selector
                selector: 'angular-image-viewer',
                template: "<div [appScreenfull]=\"fullscreen\" class=\"img-container\" [style.backgroundColor]=\"config.containerBackgroundColor\"\n    (wheel)=\"scrollZoom($event)\">\n    <div class=\"image-name\" *ngIf=\"imageName\">\n      <span>{{imageName}}</span>\n    </div>\n\n    <div cdkDrag class=\"drag-element\">\n        <img [src]=\"src[index]\" [ngStyle]=\"style\" alt=\"\"\n            (cdkDragStarted)=\"onDragStart($event)\"\n            (load)=\"onLoad()\" (loadstart)=\"onLoadStart()\" (error)=\"imageNotFound()\" />\n    </div>\n\n    <div class=\"spinner-container\" *ngIf=\"loading\">\n        <div class=\"spinner\"></div>\n    </div>\n\n    <div class=\"button-container\">\n        <button type=\"button\" id=\"ngx-fs-btn\" [class]=\"config.btnClass\" (click)=\"toggleFullscreen()\"\n        [style.color]=\"config.primaryColor\" *ngIf=\"config.allowFullscreen\">\n            <span [class]=\"config.btnIcons.fullscreen\"></span>\n        </button>\n\n        <div class=\"button-container-bottom\">\n            <button type=\"button\" [class]=\"config.btnClass\" *ngFor=\"let cBtn of config.customBtns\"\n            [style.color]=\"config.primaryColor\" (click)=\"fireCustomEvent(cBtn.name, index)\">\n                <span [class]=\"cBtn.icon\"></span>\n            </button>\n\n            <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.rotateCounterClockwise\"\n            [style.color]=\"config.primaryColor\" (click)=\"rotateCounterClockwise()\">\n                <span [class]=\"config.btnIcons.rotateCounterClockwise\"></span>\n            </button>\n            <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.rotateClockwise\"\n            [style.color]=\"config.primaryColor\" (click)=\"rotateClockwise()\">\n                <span [class]=\"config.btnIcons.rotateClockwise\"></span>\n            </button>\n\n            <div class=\"button-zoom-in-out-container\">\n                <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.zoomIn\"\n                [style.color]=\"config.primaryColor\" (click)=\"zoomIn()\">\n                    <span [class]=\"config.btnIcons.zoomIn\"></span>\n                </button>\n                <button type=\"button\" [class]=\"config.btnClass\" *ngIf=\"config.btnShow.zoomOut\"\n                [style.color]=\"config.primaryColor\" (click)=\"zoomOut()\">\n                    <span [class]=\"config.btnIcons.zoomOut\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"nav-button-container\" *ngIf=\"src.length > 1\">\n        <button type=\"button\" #prevImg [class]=\"config.btnClass\" (click)=\"prevImage($event); prevImg.blur()\"\n        [style.color]=\"config.primaryColor\"  [disabled]=\"index === 0\">\n            <span [class]=\"config.btnIcons.prev\"></span>\n        </button>\n        <button type=\"button\" #nextImg [class]=\"config.btnClass\" (click)=\"nextImage($event); nextImg.blur()\"\n        [style.color]=\"config.primaryColor\"  [disabled]=\"index === src.length - 1\">\n            <span [class]=\"config.btnIcons.next\"></span>\n        </button>\n    </div>\n    <div class=\"footer-section\">\n        <div class=\"image-txt-count-left-align\"><span>{{footerTexts[0]}} {{index + 1}} {{footerTexts[1]}} {{src.length}}</span></div>\n        <div class=\"footer-txt-right-align\">\n            <span class=\"footer-txt-right-align-title\" [style.color]=\"config.primaryColor\">{{footerTexts[2]}}</span>\n            <span class=\"footer-txt-right-align-note\">{{footerTexts[3]}}</span>\n        </div>\n    </div>\n</div>\n",
                styles: [".img-container{position:relative;width:100%;height:100%;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;overflow:hidden}.img-container .drag-element{position:absolute;top:35px;right:78px;width:calc(100% - 156px);height:calc(100% - 85px);cursor:-webkit-grab;cursor:grab;text-align:center}.img-container .drag-element img{padding:0;max-width:100%;max-height:100%}.img-container .drag-element:active{cursor:-webkit-grabbing;cursor:grabbing}.img-container button{z-index:99}.img-container button:not(:disabled){cursor:pointer}#ngx-fs-btn{top:15px}button.default{height:24px;width:24px;border-radius:31px;opacity:.9;-webkit-transition:opacity .2s;transition:opacity .2s;font-size:12px;background:inherit;background-color:#fff;border:none;box-shadow:0 0 5px rgba(0,0,0,.3490196078)}button.default:focus{outline:0;opacity:1}button.default:hover{opacity:1}button.default:disabled{opacity:.3}.nav-button-container>button{position:relative;right:0;margin:0 10px}.nav-button-container{text-align:right;position:absolute;z-index:98;bottom:60px;left:0;right:10px}.nav-button-container button.default{height:30px;margin:0;font-size:14px}.nav-button-container button.default:first-child{border-radius:4px 0 0 4px}.nav-button-container button.default:last-child{margin-left:10px;border-radius:0 4px 4px 0}.button-container{position:absolute;top:10px;right:10px;width:24px;height:calc(100% - 115px);z-index:98}.button-container .button-container-bottom{position:absolute;bottom:0}.button-container .button-container-bottom button.default{margin-top:10px}.button-container .button-container-bottom .button-zoom-in-out-container{margin-top:15px}.button-container .button-container-bottom .button-zoom-in-out-container button.default{margin:0;border-radius:0;height:30px}.button-container .button-container-bottom .button-zoom-in-out-container button.default:first-child{margin-bottom:1px}.spinner-container{position:absolute;left:0;right:0;top:0;bottom:0;width:60px;height:60px;margin:auto;padding:10px;background-color:rgba(0,0,0,.4);border-radius:25%}.spinner{border-width:7px;border-style:solid;border-color:#ccc #ccc #222;border-radius:50%;height:100%;width:100%;box-sizing:border-box;-webkit-animation:2s linear infinite rotation;animation:2s linear infinite rotation}.footer-section{position:absolute;bottom:10px;left:0;width:100%;line-height:18px;z-index:98}.footer-section .image-txt-count-left-align{float:left;padding:0 10px;font-family:\"Source Sans Pro SemiBold\";font-size:14;color:#333}.footer-section .footer-txt-right-align{float:right;padding:0 10px;text-align:right}.footer-section .footer-txt-right-align span.footer-txt-right-align-title{display:block;font-family:\"Source Sans Pro SemiBold\";font-size:14}.footer-section .footer-txt-right-align span.footer-txt-right-align-note{color:#767676;font-family:\"Source Sans Pro\";font-size:12}.image-name{position:absolute;top:10px;left:10px;z-index:98;font-family:\"Source Sans Pro SemiBold\";font-size:16;color:#333}@keyframes rotation{from{-webkit-transform:rotate(0)}to{-webkit-transform:rotate(359deg)}}@-webkit-keyframes rotation{from{-webkit-transform:rotate(0)}to{-webkit-transform:rotate(359deg)}}"]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: ['config']
            }] }]; }, { index: [{
            type: Input
        }], footerTexts: [{
            type: Input
        }], indexChange: [{
            type: Output
        }], configChange: [{
            type: Output
        }], customImageEvent: [{
            type: Output
        }], config: [{
            type: Input
        }], nextImage: [{
            type: HostListener,
            args: ['window:keyup.ArrowRight', ['$event']]
        }], prevImage: [{
            type: HostListener,
            args: ['window:keyup.ArrowLeft', ['$event']]
        }], onMouseOver: [{
            type: HostListener,
            args: ['mouseover']
        }], onMouseLeave: [{
            type: HostListener,
            args: ['mouseleave']
        }], cdkDrag: [{
            type: ViewChild,
            args: [CdkDrag, { static: true }]
        }], src: [{
            type: Input
        }], screenHeightOccupied: [{
            type: Input
        }], imageName: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullScreenDirective, [{
        type: Directive,
        args: [{
                selector: '[appScreenfull]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fullscreenState: [{
            type: Input,
            args: ['appScreenfull']
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularImageViewerModule, { declarations: function () { return [AngularImageViewerComponent,
        FullScreenDirective]; }, imports: function () { return [CommonModule,
        DragDropModule]; }, exports: function () { return [AngularImageViewerComponent,
        FullScreenDirective,
        DragDropModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularImageViewerModule, [{
        type: NgModule,
        args: [{
                declarations: [AngularImageViewerComponent, FullScreenDirective],
                imports: [
                    CommonModule,
                    DragDropModule
                ],
                exports: [AngularImageViewerComponent, FullScreenDirective, DragDropModule]
            }]
    }], null, null); })();

/*
 * Public API Surface of angular-image-viewer
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AngularImageViewerComponent, AngularImageViewerModule, CustomImageEvent, FullScreenDirective };

//# sourceMappingURL=clarivate-angular-image-viewer.js.map