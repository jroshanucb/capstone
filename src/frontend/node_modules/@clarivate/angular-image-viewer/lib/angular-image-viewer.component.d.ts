import { OnInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { ImageViewerConfig } from './models/image-viewer-config.model';
import { CustomImageEvent } from './models/custom-image-event-model';
import { CdkDrag } from '@angular/cdk/drag-drop';
import * as ɵngcc0 from '@angular/core';
export declare class AngularImageViewerComponent implements OnInit, OnChanges {
    moduleConfig: ImageViewerConfig;
    cdkDrag: CdkDrag;
    src: string[];
    config: ImageViewerConfig;
    screenHeightOccupied: 0;
    index: number;
    imageName: string;
    footerTexts: string[];
    indexChange: EventEmitter<number>;
    configChange: EventEmitter<ImageViewerConfig>;
    customImageEvent: EventEmitter<CustomImageEvent>;
    styleHeight: string;
    style: {
        transform: string;
        msTransform: string;
        oTransform: string;
        webkitTransform: string;
    };
    fullscreen: boolean;
    loading: boolean;
    isDragOn: boolean;
    private scale;
    private rotation;
    private hovered;
    constructor(moduleConfig: ImageViewerConfig);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    nextImage(event: any): void;
    prevImage(event: any): void;
    zoomIn(): void;
    zoomOut(): void;
    scrollZoom(evt: any): boolean;
    rotateClockwise(): void;
    rotateCounterClockwise(): void;
    onLoad(): void;
    onLoadStart(): void;
    imageNotFound(): void;
    onDragStart(evt: any): void;
    toggleFullscreen(): void;
    triggerIndexBinding(): void;
    triggerConfigBinding(): void;
    fireCustomEvent(name: any, imageIndex: any): void;
    reset(): void;
    onMouseOver(): void;
    onMouseLeave(): void;
    private canNavigate;
    private updateStyle;
    private mergeConfig;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularImageViewerComponent, [{ optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AngularImageViewerComponent, "angular-image-viewer", never, { "index": "index"; "footerTexts": "footerTexts"; "config": "config"; "src": "src"; "screenHeightOccupied": "screenHeightOccupied"; "imageName": "imageName"; }, { "indexChange": "indexChange"; "configChange": "configChange"; "customImageEvent": "customImageEvent"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1pbWFnZS12aWV3ZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFuZ3VsYXItaW1hZ2Utdmlld2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEltYWdlVmlld2VyQ29uZmlnIH0gZnJvbSAnLi9tb2RlbHMvaW1hZ2Utdmlld2VyLWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBDdXN0b21JbWFnZUV2ZW50IH0gZnJvbSAnLi9tb2RlbHMvY3VzdG9tLWltYWdlLWV2ZW50LW1vZGVsJztcbmltcG9ydCB7IENka0RyYWcgfSBmcm9tICdAYW5ndWxhci9jZGsvZHJhZy1kcm9wJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFuZ3VsYXJJbWFnZVZpZXdlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgICBtb2R1bGVDb25maWc6IEltYWdlVmlld2VyQ29uZmlnO1xuICAgIGNka0RyYWc6IENka0RyYWc7XG4gICAgc3JjOiBzdHJpbmdbXTtcbiAgICBjb25maWc6IEltYWdlVmlld2VyQ29uZmlnO1xuICAgIHNjcmVlbkhlaWdodE9jY3VwaWVkOiAwO1xuICAgIGluZGV4OiBudW1iZXI7XG4gICAgaW1hZ2VOYW1lOiBzdHJpbmc7XG4gICAgZm9vdGVyVGV4dHM6IHN0cmluZ1tdO1xuICAgIGluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcbiAgICBjb25maWdDaGFuZ2U6IEV2ZW50RW1pdHRlcjxJbWFnZVZpZXdlckNvbmZpZz47XG4gICAgY3VzdG9tSW1hZ2VFdmVudDogRXZlbnRFbWl0dGVyPEN1c3RvbUltYWdlRXZlbnQ+O1xuICAgIHN0eWxlSGVpZ2h0OiBzdHJpbmc7XG4gICAgc3R5bGU6IHtcbiAgICAgICAgdHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgICAgIG1zVHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgICAgIG9UcmFuc2Zvcm06IHN0cmluZztcbiAgICAgICAgd2Via2l0VHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgfTtcbiAgICBmdWxsc2NyZWVuOiBib29sZWFuO1xuICAgIGxvYWRpbmc6IGJvb2xlYW47XG4gICAgaXNEcmFnT246IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBzY2FsZTtcbiAgICBwcml2YXRlIHJvdGF0aW9uO1xuICAgIHByaXZhdGUgaG92ZXJlZDtcbiAgICBjb25zdHJ1Y3Rvcihtb2R1bGVDb25maWc6IEltYWdlVmlld2VyQ29uZmlnKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5leHRJbWFnZShldmVudDogYW55KTogdm9pZDtcbiAgICBwcmV2SW1hZ2UoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgem9vbUluKCk6IHZvaWQ7XG4gICAgem9vbU91dCgpOiB2b2lkO1xuICAgIHNjcm9sbFpvb20oZXZ0OiBhbnkpOiBib29sZWFuO1xuICAgIHJvdGF0ZUNsb2Nrd2lzZSgpOiB2b2lkO1xuICAgIHJvdGF0ZUNvdW50ZXJDbG9ja3dpc2UoKTogdm9pZDtcbiAgICBvbkxvYWQoKTogdm9pZDtcbiAgICBvbkxvYWRTdGFydCgpOiB2b2lkO1xuICAgIGltYWdlTm90Rm91bmQoKTogdm9pZDtcbiAgICBvbkRyYWdTdGFydChldnQ6IGFueSk6IHZvaWQ7XG4gICAgdG9nZ2xlRnVsbHNjcmVlbigpOiB2b2lkO1xuICAgIHRyaWdnZXJJbmRleEJpbmRpbmcoKTogdm9pZDtcbiAgICB0cmlnZ2VyQ29uZmlnQmluZGluZygpOiB2b2lkO1xuICAgIGZpcmVDdXN0b21FdmVudChuYW1lOiBhbnksIGltYWdlSW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgcmVzZXQoKTogdm9pZDtcbiAgICBvbk1vdXNlT3ZlcigpOiB2b2lkO1xuICAgIG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xuICAgIHByaXZhdGUgY2FuTmF2aWdhdGU7XG4gICAgcHJpdmF0ZSB1cGRhdGVTdHlsZTtcbiAgICBwcml2YXRlIG1lcmdlQ29uZmlnO1xufVxuIl19